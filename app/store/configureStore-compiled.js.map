{"version":3,"sources":["configureStore.js"],"names":[],"mappings":";;;;;kBAkBwB,cAAc;;;;;;;;;;;;;;AAXtC,IAAM,MAAM,GAAG,2BACX;AACI,aAAS,EAAE,IAAI;AACf,aAAS,EAAE,mBAAC,QAAQ,EAAE,MAAM;eAAK,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY;KAAA;CACzE,CACJ;;;AAAC;AAEF,IAAM,yBAAyB,GAAG,WAXb,eAAe,EAYhC,MAAM,CACT,QAbO,WAAW,CAaL,CAAC;;AAEA,SAAS,cAAc,CAAC,YAAY,EAAE;AACjD,QAAM,KAAK,GAAG,yBAAyB,qBAAc,YAAY,CAAC,CAAC;;AAEnE,QAAG,MAAM,CAAC,GAAG,EAAE;;AAEX,cAAM,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,EAAE,YAAM;AACnC,gBAAM,WAAW,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC;;AAEzD,iBAAK,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;SACrC,CAAC,CAAC;KACN;;AAED,WAAO,KAAK,CAAC;CAChB","file":"configureStore-compiled.js","sourcesContent":["/**\r\n * Created by liorr_000 on 17/1/2016.\r\n */\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport createLogger from 'redux-logger';\r\nimport rootReducer from '../reducers';\r\n\r\nconst logger = createLogger(\r\n    {\r\n        collapsed: true,\r\n        predicate: (getState, action) => process.env.NODE_ENV !== 'production',\r\n    }\r\n);\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(\r\n    logger\r\n)(createStore);\r\n\r\nexport default function configureStore(initialState) {\r\n    const store = createStoreWithMiddleware(rootReducer, initialState);\r\n\r\n    if(module.hot) {\r\n        // Enable Webpack hot module replacement for reducers\r\n        module.hot.accept('../reducers', () => {\r\n            const nextReducer = require('../reducers/index').default;\r\n\r\n            store.replaceReducer(nextReducer);\r\n        });\r\n    }\r\n\r\n    return store;\r\n}"]}