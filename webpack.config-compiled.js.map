{"version":3,"sources":["webpack.config.js"],"names":[],"mappings":";;AACA,IAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,IAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACnC,IAAM,iBAAiB,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;AACzD,IAAM,KAAK,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;;AAGvC,IAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;AAC/C,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC;AAC/B,IAAM,KAAK,GAAG;AACV,OAAG,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC;AAChC,SAAK,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC;CACvC,CAAC;AACF,IAAM,MAAM,GAAG;AACX,SAAK,EAAE,KAAK,CAAC,GAAG;;;;AAIhB,WAAO,EAAE;AACL,kBAAU,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC;KAClC;AACD,UAAM,EAAE;AACJ,YAAI,EAAE,KAAK,CAAC,KAAK;AACjB,gBAAQ,EAAE,WAAW;KACxB;AACD,UAAM,EAAE;AACJ,eAAO,EAAE,CACL;AACI,gBAAI,EAAE,QAAQ;AACd,mBAAO,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC;AACzB,mBAAO,EAAE,KAAK,CAAC,GAAG;SACrB;;AAED;AACI,gBAAI,EAAE,SAAS;;;;AAIf,mBAAO,EAAE,CAAC,sBAAsB,CAAC;AACjC,mBAAO,EAAE,KAAK,CAAC,GAAG;SACrB,CACJ;KACJ;AACD,WAAO,EAAE,CACL,IAAI,iBAAiB,CAAC;AAClB,gBAAQ,EAAE,+CAA+C;AACzD,aAAK,EAAE,YAAY;AACnB,kBAAU,EAAE,KAAK;KACpB,CAAC,CACL;CACJ,CAAC;;AAEF,IAAG,MAAM,KAAK,OAAO,IAAI,CAAC,MAAM,EAAE;AAC9B,UAAM,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,EAAE;AAC3B,eAAO,EAAE,iBAAiB;AAC1B,iBAAS,EAAE;AACP,8BAAkB,EAAE,IAAI;AACxB,eAAG,EAAE,IAAI;AACT,kBAAM,EAAE,IAAI;AACZ,oBAAQ,EAAE,IAAI;;AAEd,iBAAK,EAAE,aAAa;;AAEpB,gBAAI,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI;AACtB,gBAAI,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI;SACzB;AACD,eAAO,EAAE,CACL,IAAI,OAAO,CAAC,0BAA0B,EAAE,CAC3C;KACJ,CAAC,CAAC;CACN;AACD,IAAG,MAAM,KAAK,OAAO,EAAE;AACnB,UAAM,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;CACtC","file":"webpack.config-compiled.js","sourcesContent":["\r\nconst path = require('path');\r\nconst webpack = require('webpack');\r\nconst HtmlwebpackPlugin = require('html-webpack-plugin');\r\nconst merge = require('webpack-merge');\r\n\r\n\r\nconst TARGET = process.env.npm_lifecycle_event;\r\nprocess.env.BABEL_ENV = TARGET;\r\nconst PATHS = {\r\n    app: path.join(__dirname, 'app'),\r\n    build: path.join(__dirname, 'build')\r\n};\r\nconst common = {\r\n    entry: PATHS.app,\r\n    // Add resolve.extensions. '' is needed to allow imports\r\n    // without an extension. Note the .'s before extensions!!!\r\n    // The matching will fail without!\r\n    resolve: {\r\n        extensions: ['', '.js', '.jsx']\r\n    },\r\n    output: {\r\n        path: PATHS.build,\r\n        filename: 'bundle.js'\r\n    },\r\n    module: {\r\n        loaders: [\r\n            {\r\n                test: /\\.css$/,\r\n                loaders: ['style', 'css'],\r\n                include: PATHS.app\r\n            },\r\n            // Set up jsx. This accepts js too thanks to RegExp\r\n            {\r\n                test: /\\.jsx?$/,\r\n                // Enable caching for improved performance during development\r\n                // It uses default OS directory by default. If you need something\r\n                // more custom, pass a path to it. I.e., babel?cacheDirectory=<path>\r\n                loaders: ['babel?cacheDirectory'],\r\n                include: PATHS.app\r\n            }\r\n        ]\r\n    },\r\n    plugins: [\r\n        new HtmlwebpackPlugin({\r\n            template: 'node_modules/html-webpack-template/index.html',\r\n            title: 'Kanban app',\r\n            appMountId: 'app'\r\n        })\r\n    ]\r\n};\r\n\r\nif(TARGET === 'start' || !TARGET) {\r\n    module.exports = merge(common, {\r\n        devtool: 'eval-source-map',\r\n        devServer: {\r\n            historyApiFallback: true,\r\n            hot: true,\r\n            inline: true,\r\n            progress: true,\r\n            // Display only errors to reduce the amount of output.\r\n            stats: 'errors-only',\r\n            // Parse host and port from env so this is easy to customize.\r\n            host: process.env.HOST,\r\n            port: process.env.PORT\r\n        },\r\n        plugins: [\r\n            new webpack.HotModuleReplacementPlugin()\r\n        ]\r\n    });\r\n}\r\nif(TARGET === 'build') {\r\n    module.exports = merge(common, {});\r\n}"]}